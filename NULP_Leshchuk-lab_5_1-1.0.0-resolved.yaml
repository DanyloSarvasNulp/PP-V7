openapi: 3.0.0
info:
  version: 1.0.0

  title: Auditorium Reserve
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/NULP_Leshchuk/lab_5_1/1.0.0
  - url: 'https://petstore.swagger.io/v2'
paths:
  
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      responses:
        default:
          description: successful operation
        '500':
          description: failed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
        required: true
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
  
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      responses:
        '200':
          description: Success
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user
        required: true
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: The name that needs to be fetched. Use user1 for testing.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  
  /auditorium:
    post:
      tags:
        - auditorium
      summary: Create new auditorium
      operationId: createAuditorium
      responses:
        '200':
          description: OK
        '201':
          description: Success
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auditorium'
        description: Created new auditorium
        required: true
    get:
      tags: 
        - auditorium
      summary: Output contents
      description: Return all contents
      operationId: output_auditorium
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auditorium"
            application/xml:
              schema:
                $ref: "#/components/schemas/Auditorium"
        '405':
          description: Not allowed 
    
  '/auditorium/{id}':
    put:
      tags:
        - auditorium
      summary: Updated auditorium
      description: This can only be done by the logged in user.
      operationId: updateAuditorium
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
        '400':
          description: Invalid id supplied
        '404':
          description: Auditorium not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auditorium'
        description: Updated user object
        required: true
    
    get:
      tags:
        - auditorium
      summary: Find account by ID
      description: Returns a single account
      operationId: getAccountById
      parameters:
        - name: id
          in: path
          description: ID of account to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auditorium'
            application/xml:
              schema:
                $ref: '#/components/schemas/Auditorium'
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '405':
          description: Not allowed
      security:
        - api_key: []
    
    delete:
      tags:
        - auditorium
      summary: Delete auditorium
      description: This can only be done by the logged user.
      operationId: deleteAuditorium
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        
        
  /access:
    post:
      tags:
        - access
      summary: Create new auditorium
      operationId: createRequest
      responses:
        '200':
          description: Success
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Access'
        description: Created new auditorium
        required: true
    
  '/access/{user/id},{auditorium/id}':
    put:
      tags:
        - access
      summary: Updated auditorium
      description: This can only be done by the logged in user.
      operationId: updateAccess
      parameters:
        - name: user/id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: string
        - name: auditorium/id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Invalid id supplied
        '404':
          description: Auditorium not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Access'
        description: Updated user object
        required: true
    
    delete:
      tags:
        - access
      summary: Delete auditorium
      description: This can only be done by the logged user.
      operationId: deleteAccess
      parameters:
        - name: user/id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: integer
        - name: auditorium/id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
          
  /querry:
    post:
      tags:
        - queue
      summary: Create new auditorium
      operationId: createQueue
      responses:
        '200':
          description: OK
        '201':
          description: Success
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Querry'
        description: Created new auditorium
        required: true        
          
          
  /querry/values:
    get:
      tags:
        - queue
      operationId: getQueue
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auditorium"
            application/xml:
              schema:
                $ref: "#/components/schemas/Auditorium"
      security:
        - api_key: []
  
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    
    Auditorium:
     type: object
     properties:
       id: 
        type: integer
        format: int64
       is_free :
        type: boolean
    
    Querry:
     type: object
     properties:
        access:
          $ref: "#/components/schemas/Access"
        place:
          type: integer
          format: int64
        
    Access:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User/properties/id"
        auditorium:
          $ref: "#/components/schemas/Auditorium/properties/id"
        start:
          type: string
        end:
          type: string
      xml:
        name: Access
    
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    
    api_key:
      type: apiKey
      name: api_key
      in: header
